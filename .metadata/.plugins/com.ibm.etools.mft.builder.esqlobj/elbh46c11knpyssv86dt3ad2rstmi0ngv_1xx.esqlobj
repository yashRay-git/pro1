CREATE COMPUTE MODULE loop_back_flow_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		 --SET OutputRoot = InputRoot;
SET OutputLocalEnvironment.Destination.Loopback.Request.Id = InputRoot.JSON.Data.id;

-- Set the operation to 'Update'
  SET OutputLocalEnvironment.Destination.Loopback.Request.operation = 'Update';

-- Specify the object to update (e.g., 'Restaurant' in MongoDB)
   SET OutputLocalEnvironment.Destination.Loopback.Request.object = 'jarvis';

-- Specify the ID of the record to update
-- SET OutputLocalEnvironment.Destination.Loopback.Request.Id = InputRoot.JSON.Data.id;

-- Only update the specific field (in this case, the street in the address)
  SET OutputRoot.JSON.Data.address.street = InputRoot.JSON.Data.address.street;

-- Optional: Specify a timeout value in milliseconds
  SET LocalEnvironment.Destination.Loopback.Request.timeoutMilliseconds = 10000;

	END;
END MODULE;