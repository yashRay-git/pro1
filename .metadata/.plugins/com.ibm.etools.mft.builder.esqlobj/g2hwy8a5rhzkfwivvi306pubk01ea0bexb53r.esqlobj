/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;


/*  
3 Process this request and provide output in xmlnsc.
{
  "EmployeeData": {
    "Details": [
      {
        "FirstName": "Abhijt",
        "Address": "Maharastra"
      },
      {
        "FirstName": "Pawan",
        "Address": "Hyderabad"
      },
      {
        "FirstName": "Ravi",
        "Address": "Mumbai"
      },
      {
        "FirstName": "Sneha",
        "Address": "Pune"
      },
      {
        "FirstName": "Vikram",
        "Address": "Delhi"
      },
      {
        "FirstName": "Anjali",
        "Address": "Bangalore"
      }
    ]
  }
}
*/

	CREATE PROCEDURE CopyEntireMessage() BEGIN
--		SET OutputRoot = InputRoot;
		
		
		-- DECLARE  var REFERENCE TO InputRoot.JSON.Data.EmployeeData.Details.Item[1];
		DECLARE I INTEGER 1;
		
		FOR var AS InputRoot.JSON.Data.EmployeeData.Details.Item[] DO 
			 
			  CREATE LASTCHILD OF OutputRoot.XMLNSC.EmployeeData.Details[I] name 'FirstName'  VALUE  var.FirstName;
		 	  CREATE LASTCHILD OF OutputRoot.XMLNSC.EmployeeData.Details[I].Address   VALUE   var.Address;
		 	  
	SET I=I+1;
		END FOR;
	END;
