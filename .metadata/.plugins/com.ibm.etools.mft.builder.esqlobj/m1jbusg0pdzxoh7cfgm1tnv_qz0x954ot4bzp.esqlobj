/*EATE FUNCTION Main() RETURNS BOOLE*/
BEGIN
    -- Call procedure to copy the entire message
    CALL CopyEntireMessage();
    RETURN TRUE;
END;

-- Procedure to copy message headers from InputRoot to OutputRoot
CREATE PROCEDURE CopyMessageHeaders() 
BEGIN
    DECLARE I INTEGER 1;
    DECLARE J INTEGER;
    
    -- Get the count of elements in the InputRoot
    SET J = CARDINALITY(InputRoot.*[]);

    -- Loop to copy each element from InputRoot to OutputRoot
    WHILE I < J DO
        SET OutputRoot.*[I] = InputRoot.*[I];
        SET I = I + 1;
    END WHILE;
END;

-- Procedure to copy the entire message including exceptions
CREATE PROCEDURE CopyEntireMessage() 
BEGIN
    -- References for HTTP Request Identifier and Exception List
    DECLARE msg_id REFERENCE TO InputLocalEnvironment.Destination.HTTP.RequestIdentifier;
    DECLARE exc REFERENCE TO InputExceptionList.*[1];

    -- Variables for exception details
    DECLARE File, Line, Type, Lable, Text CHARACTER;
    DECLARE Number INTEGER;

    -- Loop through the Exception List
    WHILE LASTMOVE(exc) DO
        MOVE exc LASTCHILD;
        IF exc.Number IS NOT NULL THEN
            SET File = exc.File;
            SET Line = exc.Line;
            SET Type = exc.Type;
            SET Lable = exc.Lable;
            SET Number = exc.Number;
            SET Text = exc.Text;
        END IF;
    END WHILE;

    -- Set exception details into the OutputRoot
    SET OutputRoot.XMLNSC.ExceptionList.Line = Line;
    SET OutputRoot.XMLNSC.ExceptionList.Number = Number;
    SET OutputRoot.XMLNSC.ExceptionList.Text = Text;

    -- Call external procedure for exception logging
    CALL Execep(ApplicationLabel, MessageFlowLabel, NodeLabel, msg_id, Line, CAST(Number AS CHARACTER), Text, CURRENT_TIMESTAMP);
END;

-- External procedure for exception logging
CREATE PROCEDURE Execep (
    IN PARAM1 CHARACTER,
    IN PARAM2 CHARACTER,
    IN PARAM3 CHARACTER,
    IN PARAM4 CHARACTER,
    IN PARAM5 CHARACTER,
    IN PARAM6 CHARACTER,
    IN PARAM7 CHARACTER,
    IN PARAM8 TIMESTAMP
) LANGUAGE DATABASE
EXTERNAL NAME "PROCEDURE1";

