CREATE COMPUTE MODULE DBLOGING_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;
 
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		-- SET OutputRoot = InputRoot;
		
    DECLARE inref REFERENCE TO InputRoot.XMLNSC;
    DECLARE mychar1, mychar2 CHARACTER;

    -- Convert MSG TO STRING 
    SET mychar1 = CAST(ASBITSTREAM(inref) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);

    -- Call  'channel_request'
    CALL calldb(ApplicationLabel, MessageFlowLabel, CURRENT_TIMESTAMP, mychar1, 'channel_request', 'BeforeComputeNode', 'REF12345');

   
    SET OutputRoot.JSON.Data.JSONREQUEST = InputRoot.XMLNSC;
    

    DECLARE outref REFERENCE TO OutputRoot.JSON.Data.JSONREQUEST;

    -- Convert the character string
    SET mychar2 = CAST(ASBITSTREAM(outref) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);

    CALL calldb(ApplicationLabel, MessageFlowLabel, CURRENT_TIMESTAMP, mychar2, 'host_request', 'AfterComputeNode', 'REF67890');

	END;
END MODULE;